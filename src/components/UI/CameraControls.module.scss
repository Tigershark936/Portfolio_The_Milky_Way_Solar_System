.cameraControlsContainer {
    position: fixed;
    top: 20px;
    left: 20px;
    z-index: 1000;
}

.cameraButton {
    background: rgba(0, 0, 0, 0.7);
    border: 2px solid rgba(138, 43, 226, 0.4);
    border-radius: 8px;
    padding: 12px;
    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><defs><filter id="glow"><feGaussianBlur stdDeviation="3" result="coloredBlur"/><feMerge><feMergeNode in="coloredBlur"/><feMergeNode in="SourceGraphic"/></feMerge></filter></defs><circle cx="16" cy="16" r="10" fill="none" stroke="%238A2BE2" stroke-width="2" filter="url(%23glow)"/><circle cx="16" cy="16" r="4" fill="%238A2BE2" filter="url(%23glow)"/><circle cx="16" cy="16" r="1" fill="%23FFFFFF"/></svg>'), auto;
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
    position: relative;
    overflow: hidden;
    box-shadow: 0 4px 15px rgba(138, 43, 226, 0.3);

    // Animation de pulsation
    &::before {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 0;
        height: 0;
        background: rgba(138, 43, 226, 0.2);
        border-radius: 50%;
        transform: translate(-50%, -50%);
        transition: all 0.6s ease;
    }

    &:hover {
        background: rgba(0, 0, 0, 0.8);
        border-color: rgba(138, 43, 226, 0.6);
        transform: scale(1.05);
        box-shadow: 0 6px 20px rgba(138, 43, 226, 0.4);

        &::before {
            width: 100px;
            height: 100px;
        }
    }

    // Style quand le menu est ouvert
    &.open {
        background: rgba(0, 0, 0, 0.7);
        border-color: rgba(138, 43, 226, 0.6);
        box-shadow: 0 4px 15px rgba(138, 43, 226, 0.3);

        &:hover {
            background: rgba(0, 0, 0, 0.8);
            border-color: rgba(138, 43, 226, 0.8);
            box-shadow: 0 6px 20px rgba(138, 43, 226, 0.4);
        }
    }

    &:active {
        transform: scale(0.95);
    }

    // Focus visible pour l'accessibilité
    &:focus-visible {
        outline: 2px solid #8A2BE2;
        outline-offset: 2px;
        box-shadow: 0 0 0 4px rgba(138, 43, 226, 0.3);
    }
}

.cameraTitle {
    color: #E6E6FA;
    font-size: 14px;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 1px;
    text-shadow: 0 0 8px rgba(138, 43, 226, 0.8);
    transition: all 0.3s ease;
}

.cameraButton.open .cameraTitle {
    color: #DC143C;
    text-shadow: 0 0 8px rgba(220, 20, 60, 0.8);
}

.controls {
    position: absolute;
    top: 100%;
    left: 0;
    margin-top: 10px;
    background: rgba(0, 0, 0, 0.8);
    border: 2px solid rgba(138, 43, 226, 0.5);
    border-radius: 12px;
    padding: 0;
    min-width: 280px;
    backdrop-filter: blur(15px);
    box-shadow: 0 8px 32px rgba(138, 43, 226, 0.4);
    animation: slideDown 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    transform-origin: top left;
}

@keyframes slideDown {
    from {
        opacity: 0;
        transform: translateY(-20px) scale(0.8);
    }

    to {
        opacity: 1;
        transform: translateY(0) scale(1);
    }
}

.controlsHeader {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 20px 20px;
    border-bottom: 1px solid rgba(138, 43, 226, 0.3);
    background: rgba(0, 0, 0, 0.3);

    h3 {
        color: #E6E6FA;
        margin: 0;
        font-size: 16px;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        text-shadow:
            0 0 5px rgba(138, 43, 226, 0.8),
            0 0 10px rgba(138, 43, 226, 0.6),
            0 0 15px rgba(138, 43, 226, 0.4),
            0 2px 4px rgba(0, 0, 0, 0.5);
        white-space: nowrap;
        animation: titleGlow 2s ease-in-out infinite alternate;
    }
}

@keyframes titleGlow {
    from {
        text-shadow:
            0 0 5px rgba(138, 43, 226, 0.8),
            0 0 10px rgba(138, 43, 226, 0.6),
            0 0 15px rgba(138, 43, 226, 0.4),
            0 2px 4px rgba(0, 0, 0, 0.5);
    }

    to {
        text-shadow:
            0 0 8px rgba(138, 43, 226, 1),
            0 0 16px rgba(138, 43, 226, 0.8),
            0 0 24px rgba(138, 43, 226, 0.6),
            0 2px 4px rgba(0, 0, 0, 0.5);
    }
}

.controlsContent {
    padding: 16px 20px;
}

.controlGroup {
    margin-bottom: 20px;

    &:last-child {
        margin-bottom: 0;
    }
}

.controlLabel {
    display: block;
    color: #E6E6FA;
    font-size: 14px;
    font-weight: 600;
    margin-bottom: 12px;
    text-shadow: 0 0 5px rgba(138, 43, 226, 0.6);
}

.speedControls {
    display: flex;
    gap: 8px;
    flex-wrap: wrap;
}

.presetControls {
    display: flex;
    flex-direction: column;
    gap: 8px;
}

.speedButton,
.presetButton,
.resetButton {
    display: flex;
    align-items: center;
    padding: 10px 14px;
    background: rgba(0, 0, 0, 0.3);
    border: 2px solid rgba(138, 43, 226, 0.3);
    border-radius: 8px;
    color: #E6E6FA;
    font-size: 13px;
    font-weight: 600;
    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><defs><filter id="glow"><feGaussianBlur stdDeviation="3" result="coloredBlur"/><feMerge><feMergeNode in="coloredBlur"/><feMergeNode in="SourceGraphic"/></feMerge></filter></defs><circle cx="16" cy="16" r="10" fill="none" stroke="%238A2BE2" stroke-width="2" filter="url(%23glow)"/><circle cx="16" cy="16" r="4" fill="%238A2BE2" filter="url(%23glow)"/><circle cx="16" cy="16" r="1" fill="%23FFFFFF"/></svg>'), auto;
    transition: all 0.3s ease;
    text-align: left;
    position: relative;
    overflow: hidden;

    // Effet de balayage
    &::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg,
                transparent,
                rgba(138, 43, 226, 0.1),
                rgba(138, 43, 226, 0.4),
                rgba(138, 43, 226, 0.1),
                transparent);
        transition: left 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        z-index: 1;
    }

    &::after {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg,
                transparent,
                rgba(138, 43, 226, 0.3),
                rgba(138, 43, 226, 0.6),
                rgba(138, 43, 226, 0.3),
                transparent);
        transition: left 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        z-index: 2;
        filter: blur(2px);
    }

    &:hover {
        background: rgba(0, 0, 0, 0.5);
        border-color: rgba(138, 43, 226, 0.5);
        transform: translateY(-2px);
        box-shadow:
            0 6px 20px rgba(138, 43, 226, 0.4),
            0 0 15px rgba(138, 43, 226, 0.3);
        text-shadow: 0 0 8px rgba(138, 43, 226, 0.6);

        &::before {
            left: 100%;
        }

        &::after {
            left: 100%;
        }
    }

    // Focus visible pour l'accessibilité
    &:focus-visible {
        outline: 2px solid #8A2BE2;
        outline-offset: 2px;
        box-shadow:
            0 0 0 4px rgba(138, 43, 226, 0.3),
            0 4px 15px rgba(138, 43, 226, 0.4);
    }

    &.active {
        background: rgba(0, 0, 0, 0.5);
        border-color: #4169E1;
        color: #4169E1;
        text-shadow:
            0 0 5px rgba(65, 105, 225, 0.8),
            0 0 10px rgba(65, 105, 225, 0.6);
        box-shadow:
            0 4px 15px rgba(65, 105, 225, 0.3),
            inset 0 0 10px rgba(65, 105, 225, 0.1);

        &:hover {
            background: rgba(0, 0, 0, 0.6);
            text-shadow:
                0 0 8px rgba(65, 105, 225, 1),
                0 0 16px rgba(65, 105, 225, 0.8);
        }

        // Balayage bleu pour les boutons actifs
        &::before {
            background: linear-gradient(90deg,
                    transparent,
                    rgba(65, 105, 225, 0.1),
                    rgba(65, 105, 225, 0.4),
                    rgba(65, 105, 225, 0.1),
                    transparent);
        }

        &::after {
            background: linear-gradient(90deg,
                    transparent,
                    rgba(65, 105, 225, 0.3),
                    rgba(65, 105, 225, 0.6),
                    rgba(65, 105, 225, 0.3),
                    transparent);
        }
    }
}

.resetButton {
    width: 100%;
    justify-content: center;
    border-color: rgba(255, 215, 0, 0.3);
    color: #FFD700;

    &:hover {
        border-color: rgba(255, 215, 0, 0.5);
        box-shadow:
            0 6px 20px rgba(255, 215, 0, 0.4),
            0 0 15px rgba(255, 215, 0, 0.3);
        text-shadow: 0 0 8px rgba(255, 215, 0, 0.6);
    }

    // Balayage doré pour le reset
    &::before {
        background: linear-gradient(90deg,
                transparent,
                rgba(255, 215, 0, 0.1),
                rgba(255, 215, 0, 0.4),
                rgba(255, 215, 0, 0.1),
                transparent);
    }

    &::after {
        background: linear-gradient(90deg,
                transparent,
                rgba(255, 215, 0, 0.3),
                rgba(255, 215, 0, 0.6),
                rgba(255, 215, 0, 0.3),
                transparent);
    }
}

.buttonIcon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 20px;
    height: 20px;
    margin-right: 12px;
    font-size: 16px;
    font-weight: bold;
    transition: all 0.3s ease;
    text-shadow: 0 0 8px currentColor;
    filter: drop-shadow(0 0 4px currentColor);

    // Animation de pulsation pour les icônes actives
    .speedButton.active & {
        animation: iconPulse 1.5s ease-in-out infinite;
    }
}

@keyframes iconPulse {

    0%,
    100% {
        transform: scale(1);
        text-shadow: 0 0 8px currentColor;
    }

    50% {
        transform: scale(1.1);
        text-shadow: 0 0 12px currentColor, 0 0 20px currentColor;
    }
}